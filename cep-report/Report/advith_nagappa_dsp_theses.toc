\contentsline {chapter}{\numberline {1}Introduction}{1}{chapter.1}
\contentsline {section}{\numberline {1.1}Problem Statement}{2}{section.1.1}
\contentsline {section}{\numberline {1.2}Contribution}{4}{section.1.2}
\contentsline {section}{\numberline {1.3}Outline}{5}{section.1.3}
\contentsline {chapter}{\numberline {2}Background}{6}{chapter.2}
\contentsline {section}{\numberline {2.1}Complex Event Processing}{6}{section.2.1}
\contentsline {subsection}{\numberline {2.1.1}Hierarchical event abstraction}{7}{subsection.2.1.1}
\contentsline {subsection}{\numberline {2.1.2}Communication models in complex event processing}{7}{subsection.2.1.2}
\contentsline {subsection}{\numberline {2.1.3}Event Query languages}{9}{subsection.2.1.3}
\contentsline {section}{\numberline {2.2}Software Defined Networking}{9}{section.2.2}
\contentsline {section}{\numberline {2.3}OpenFlow}{11}{section.2.3}
\contentsline {section}{\numberline {2.4}RYU SDN Controller}{12}{section.2.4}
\contentsline {section}{\numberline {2.5}Intel Data Plane Development Kit}{13}{section.2.5}
\contentsline {subsection}{\numberline {2.5.1}DPDK Vhost library}{14}{subsection.2.5.1}
\contentsline {chapter}{\numberline {3}Related Work}{17}{chapter.3}
\contentsline {section}{\numberline {3.1}Deployment Strategies and Operator Placement in Event Processing}{17}{section.3.1}
\contentsline {section}{\numberline {3.2}Fog Computing and Software Defined Internet of Things}{18}{section.3.2}
\contentsline {section}{\numberline {3.3}Application-aware Data Plane Processing in SDN}{19}{section.3.3}
\contentsline {section}{\numberline {3.4}In-Net: In-Networking Processing for the Masses}{20}{section.3.4}
\contentsline {section}{\numberline {3.5}SmartSwitch: Blurring the Line Between Network Infrastructure and Cloud Applications}{21}{section.3.5}
\contentsline {section}{\numberline {3.6}NetVM: High Performance and Flexible Network Virtualization}{22}{section.3.6}
\contentsline {chapter}{\numberline {4}Design and Implementation}{26}{chapter.4}
\contentsline {section}{\numberline {4.1}Why Open vSwitch?}{26}{section.4.1}
\contentsline {section}{\numberline {4.2}Goals of the implementation}{27}{section.4.2}
\contentsline {section}{\numberline {4.3}An overview of Open vSwitch}{27}{section.4.3}
\contentsline {section}{\numberline {4.4}Design Breakdown}{30}{section.4.4}
\contentsline {section}{\numberline {4.5}System Model}{32}{section.4.5}
\contentsline {subsection}{\numberline {4.5.1}Event Detection Semantics}{32}{subsection.4.5.1}
\contentsline {subsection}{\numberline {4.5.2}Compare Operation Semantics}{33}{subsection.4.5.2}
\contentsline {subsection}{\numberline {4.5.3}Stateful Operation Semantics}{34}{subsection.4.5.3}
\contentsline {section}{\numberline {4.6}Implementation walk-through}{34}{section.4.6}
\contentsline {subsection}{\numberline {4.6.1}Event extraction and de-serialization}{34}{subsection.4.6.1}
\contentsline {subsection}{\numberline {4.6.2}Accessing event data}{35}{subsection.4.6.2}
\contentsline {subsection}{\numberline {4.6.3}Modelling OpenFlow pipeline for event processing}{36}{subsection.4.6.3}
\contentsline {subsection}{\numberline {4.6.4}Adding event data fields to OpenFlow tables}{37}{subsection.4.6.4}
\contentsline {subsection}{\numberline {4.6.5}Adding support for event based rules}{38}{subsection.4.6.5}
\contentsline {subsection}{\numberline {4.6.6}Detection based on event data}{41}{subsection.4.6.6}
\contentsline {subsection}{\numberline {4.6.7}Enabling compare operations support}{42}{subsection.4.6.7}
\contentsline {subsection}{\numberline {4.6.8}Enabling Stateful Operations}{44}{subsection.4.6.8}
\contentsline {subsection}{\numberline {4.6.9}API support for event rules via RYU}{45}{subsection.4.6.9}
\contentsline {subsubsection}{Enable Northbound API}{49}{subsubsection*.38}
\contentsline {section}{\numberline {4.7}Summary}{49}{section.4.7}
\contentsline {chapter}{\numberline {5}Evaluation and Results}{50}{chapter.5}
\contentsline {section}{\numberline {5.1}Evaluation Environment}{50}{section.5.1}
\contentsline {section}{\numberline {5.2}System under Test}{50}{section.5.2}
\contentsline {section}{\numberline {5.3}Apparatus for Evaluation}{52}{section.5.3}
\contentsline {section}{\numberline {5.4}Evaluation on Network Namespaces}{52}{section.5.4}
\contentsline {subsection}{\numberline {5.4.1}Set-up Methodology}{53}{subsection.5.4.1}
\contentsline {subsection}{\numberline {5.4.2}Performance measurement without event operations}{55}{subsection.5.4.2}
\contentsline {subsection}{\numberline {5.4.3}Performance measurement with event detection and redirection}{56}{subsection.5.4.3}
\contentsline {subsection}{\numberline {5.4.4}Performance measurement with increasing size of event types}{58}{subsection.5.4.4}
\contentsline {subsection}{\numberline {5.4.5}Performance measurement with increasing number of event types }{59}{subsection.5.4.5}
\contentsline {subsection}{\numberline {5.4.6}Performance measurement with increasing percentage of filtered event types}{60}{subsection.5.4.6}
\contentsline {subsection}{\numberline {5.4.7}Performance measurement of event attributes detection and redirection}{60}{subsection.5.4.7}
\contentsline {subsubsection}{Detect operation on one attribute}{61}{subsubsection*.45}
\contentsline {subsubsection}{Detect operation on two disjunct attributes}{62}{subsubsection*.47}
\contentsline {subsubsection}{Detect operation on two conjunct attributes}{63}{subsubsection*.48}
\contentsline {subsubsection}{Network Traffic Monitoring for the event detection and redirection operations}{65}{subsubsection*.49}
\contentsline {subsection}{\numberline {5.4.8}Performance measurement of compare operations on event attributes}{65}{subsection.5.4.8}
\contentsline {subsubsection}{Greater than or equal to operator}{65}{subsubsection*.50}
\contentsline {subsubsection}{Less than or equal to operator}{66}{subsubsection*.51}
\contentsline {subsubsection}{Performance of compare Operations}{68}{subsubsection*.52}
\contentsline {subsection}{\numberline {5.4.9}Evaluating for accuracy - compare operations}{68}{subsection.5.4.9}
\contentsline {subsection}{\numberline {5.4.10}Performance measure of stateful operations on event attributes}{72}{subsection.5.4.10}
\contentsline {subsubsection}{Moving Maxima operator}{72}{subsubsection*.58}
\contentsline {subsubsection}{Window Maxima operator}{73}{subsubsection*.59}
\contentsline {subsubsection}{Performance of Stateful Operations}{75}{subsubsection*.60}
\contentsline {subsection}{\numberline {5.4.11}Evaluating for accuracy - stateful operations}{75}{subsection.5.4.11}
\contentsline {section}{\numberline {5.5}Evaluation with DPDK}{77}{section.5.5}
\contentsline {subsection}{\numberline {5.5.1}System Set Up}{78}{subsection.5.5.1}
\contentsline {subsection}{\numberline {5.5.2}Guest-to-Guest Measurements}{81}{subsection.5.5.2}
\contentsline {subsection}{\numberline {5.5.3}Performance measurement with event detection redirection - DPDK}{82}{subsection.5.5.3}
\contentsline {subsection}{\numberline {5.5.4}Performance measure of compare operations and event redirection - DPDK}{83}{subsection.5.5.4}
\contentsline {subsection}{\numberline {5.5.5}Evaluating for accuracy of compare operations - DPDK}{85}{subsection.5.5.5}
\contentsline {subsection}{\numberline {5.5.6}Evaluation of processing cycles needed for event operations}{86}{subsection.5.5.6}
\contentsline {chapter}{\numberline {6}Conclusion and Future Work}{88}{chapter.6}
\contentsline {section}{\numberline {6.1}Conclusion}{88}{section.6.1}
\contentsline {section}{\numberline {6.2}Future Work}{89}{section.6.2}
\contentsline {chapter}{Bibliography}{89}{dummy.1}
